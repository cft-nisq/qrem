:py:mod:`qrem.common.external.ncpol2sdpa.sdpa_utils`
====================================================

.. py:module:: qrem.common.external.ncpol2sdpa.sdpa_utils

.. autoapi-nested-parse::

   This file contains helper functions to work with SDPA.

   Created on Fri May 16 13:52:58 2014

   @author: Peter Wittek



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   qrem.common.external.ncpol2sdpa.sdpa_utils.parse_solution_matrix
   qrem.common.external.ncpol2sdpa.sdpa_utils.read_sdpa_out
   qrem.common.external.ncpol2sdpa.sdpa_utils.which
   qrem.common.external.ncpol2sdpa.sdpa_utils.detect_sdpa
   qrem.common.external.ncpol2sdpa.sdpa_utils.solve_with_sdpa
   qrem.common.external.ncpol2sdpa.sdpa_utils.convert_row_to_sdpa_index
   qrem.common.external.ncpol2sdpa.sdpa_utils.write_to_sdpa
   qrem.common.external.ncpol2sdpa.sdpa_utils.convert_to_human_readable
   qrem.common.external.ncpol2sdpa.sdpa_utils.write_to_human_readable



.. py:function:: parse_solution_matrix(iterator)


.. py:function:: read_sdpa_out(filename, solutionmatrix=False, status=False, sdp=None)

   Helper function to parse the output file of SDPA.

   :param filename: The name of the SDPA output file.
   :type filename: str.
   :param solutionmatrix: Optional parameter for retrieving the solution.
   :type solutionmatrix: bool.
   :param status: Optional parameter for retrieving the status.
   :type status: bool.
   :param sdp: Optional parameter to add the solution to a
                         relaxation.
   :type sdp: sdp.
   :returns: tuple of two floats and optionally two lists of `numpy.array` and
             a status string


.. py:function:: which(program)


.. py:function:: detect_sdpa(solverparameters)


.. py:function:: solve_with_sdpa(sdp, solverparameters=None)

   Helper function to write out the SDP problem to a temporary
   file, call the solver, and parse the output.

   :param sdp: The SDP relaxation to be solved.
   :type sdp: :class:`ncpol2sdpa.sdp`.
   :param solverparameters: Optional parameters to SDPA.
   :type solverparameters: dict of str.
   :returns: tuple of float and list -- the primal and dual solution of the
             SDP, respectively, and a status string.


.. py:function:: convert_row_to_sdpa_index(block_struct, row_offsets, row)

   Helper function to map to sparse SDPA index values.



.. py:function:: write_to_sdpa(sdp, filename)

   Write the SDP relaxation to SDPA format.

   :param sdp: The SDP relaxation to write.
   :type sdp: :class:`ncpol2sdpa.sdp`.
   :param filename: The name of the file. It must have the suffix ".dat-s"
   :type filename: str.


.. py:function:: convert_to_human_readable(sdp)

   Convert the SDP relaxation to a human-readable format.

   :param sdp: The SDP relaxation to write.
   :type sdp: :class:`ncpol2sdpa.sdp`.
   :returns: tuple of the objective function in a string and a matrix of
             strings as the symbolic representation of the moment matrix


.. py:function:: write_to_human_readable(sdp, filename)

   Write the SDP relaxation to a human-readable format.

   :param sdp: The SDP relaxation to write.
   :type sdp: :class:`ncpol2sdpa.sdp`.
   :param filename: The name of the file.
   :type filename: str.


